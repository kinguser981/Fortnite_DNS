<api>
  <jcw-types>
    <type name="NestedScrollView_OnScrollChangeListenerImplementor" package="mono.androidx.core.widget" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.Widget.NestedScrollView+IOnScrollChangeListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.widget.NestedScrollView.OnScrollChangeListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="NestedScrollView_OnScrollChangeListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onScrollChange" method="n_onScrollChange:(Landroidx/core/widget/NestedScrollView;IIII)V:GetOnScrollChange_Landroidx_core_widget_NestedScrollView_IIIIHandler:AndroidX.Core.Widget.NestedScrollView+IOnScrollChangeListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroidx/core/widget/NestedScrollView;IIII)V" params="androidx.core.widget.NestedScrollView p0, int p1, int p2, int p3, int p4" retval="void" super_call="p0, p1, p2, p3, p4" activate_call="p0, p1, p2, p3, p4" />
      </methods>
    </type>
    <type name="ActionProvider_SubUiVisibilityListenerImplementor" package="mono.androidx.core.view" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.ActionProvider+ISubUiVisibilityListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.ActionProvider.SubUiVisibilityListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="ActionProvider_SubUiVisibilityListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onSubUiVisibilityChanged" method="n_onSubUiVisibilityChanged:(Z)V:GetOnSubUiVisibilityChanged_ZHandler:AndroidX.Core.View.ActionProvider+ISubUiVisibilityListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Z)V" params="boolean p0" retval="void" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="ActionProvider_VisibilityListenerImplementor" package="mono.androidx.core.view" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.ActionProvider+IVisibilityListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.ActionProvider.VisibilityListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="ActionProvider_VisibilityListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onActionProviderVisibilityChanged" method="n_onActionProviderVisibilityChanged:(Z)V:GetOnActionProviderVisibilityChanged_ZHandler:AndroidX.Core.View.ActionProvider+IVisibilityListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Z)V" params="boolean p0" retval="void" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor" package="mono.androidx.core.view" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.WindowInsetsControllerCompat+IOnControllableInsetsChangedListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.WindowInsetsControllerCompat.OnControllableInsetsChangedListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onControllableInsetsChanged" method="n_onControllableInsetsChanged:(Landroidx/core/view/WindowInsetsControllerCompat;I)V:GetOnControllableInsetsChanged_Landroidx_core_view_WindowInsetsControllerCompat_IHandler:AndroidX.Core.View.WindowInsetsControllerCompat+IOnControllableInsetsChangedListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroidx/core/view/WindowInsetsControllerCompat;I)V" params="androidx.core.view.WindowInsetsControllerCompat p0, int p1" retval="void" super_call="p0, p1" activate_call="p0, p1" />
      </methods>
    </type>
  </jcw-types>
  <acw-types partial-assembly-name="Xamarin.AndroidX.Core" module-name="Xamarin.AndroidX.Core.dll">
    <type assembly-qualified-name="AndroidX.Core.Util.IConsumer, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.util.Consumer" java-key="androidx.core.util.Consumer" managed-key="AndroidX.Core.Util.IConsumer" partial-assembly-qualified-name="AndroidX.Core.Util.IConsumer, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Util.IPredicate, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.util.Predicate" java-key="androidx.core.util.Predicate" managed-key="AndroidX.Core.Util.IPredicate" partial-assembly-qualified-name="AndroidX.Core.Util.IPredicate, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Internal.View.ISupportMenuItem, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.internal.view.SupportMenuItem" java-key="androidx.core.internal.view.SupportMenuItem" managed-key="AndroidX.Core.Internal.View.ISupportMenuItem" partial-assembly-qualified-name="AndroidX.Core.Internal.View.ISupportMenuItem, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.SharedElementCallback+IOnSharedElementsReadyListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener" java-key="androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener" managed-key="AndroidX.Core.App.SharedElementCallback.IOnSharedElementsReadyListener" partial-assembly-qualified-name="AndroidX.Core.App.SharedElementCallback+IOnSharedElementsReadyListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Widget.NestedScrollView+IOnScrollChangeListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.widget.NestedScrollView$OnScrollChangeListener" java-key="androidx.core.widget.NestedScrollView$OnScrollChangeListener" managed-key="AndroidX.Core.Widget.NestedScrollView.IOnScrollChangeListener" partial-assembly-qualified-name="AndroidX.Core.Widget.NestedScrollView+IOnScrollChangeListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Widget.NestedScrollView+IOnScrollChangeListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor" java-key="mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor" managed-key="AndroidX.Core.Widget.NestedScrollView.IOnScrollChangeListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.Widget.NestedScrollView+IOnScrollChangeListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ActionProvider+ISubUiVisibilityListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ActionProvider$SubUiVisibilityListener" java-key="androidx.core.view.ActionProvider$SubUiVisibilityListener" managed-key="AndroidX.Core.View.ActionProvider.ISubUiVisibilityListener" partial-assembly-qualified-name="AndroidX.Core.View.ActionProvider+ISubUiVisibilityListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ActionProvider+ISubUiVisibilityListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor" java-key="mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor" managed-key="AndroidX.Core.View.ActionProvider.ISubUiVisibilityListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.ActionProvider+ISubUiVisibilityListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ActionProvider+IVisibilityListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ActionProvider$VisibilityListener" java-key="androidx.core.view.ActionProvider$VisibilityListener" managed-key="AndroidX.Core.View.ActionProvider.IVisibilityListener" partial-assembly-qualified-name="AndroidX.Core.View.ActionProvider+IVisibilityListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ActionProvider+IVisibilityListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor" java-key="mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor" managed-key="AndroidX.Core.View.ActionProvider.IVisibilityListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.ActionProvider+IVisibilityListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IMenuProvider, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.MenuProvider" java-key="androidx.core.view.MenuProvider" managed-key="AndroidX.Core.View.IMenuProvider" partial-assembly-qualified-name="AndroidX.Core.View.IMenuProvider, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IOnApplyWindowInsetsListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.OnApplyWindowInsetsListener" java-key="androidx.core.view.OnApplyWindowInsetsListener" managed-key="AndroidX.Core.View.IOnApplyWindowInsetsListener" partial-assembly-qualified-name="AndroidX.Core.View.IOnApplyWindowInsetsListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IOnReceiveContentListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.OnReceiveContentListener" java-key="androidx.core.view.OnReceiveContentListener" managed-key="AndroidX.Core.View.IOnReceiveContentListener" partial-assembly-qualified-name="AndroidX.Core.View.IOnReceiveContentListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IScrollingView, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ScrollingView" java-key="androidx.core.view.ScrollingView" managed-key="AndroidX.Core.View.IScrollingView" partial-assembly-qualified-name="AndroidX.Core.View.IScrollingView, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IViewPropertyAnimatorListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ViewPropertyAnimatorListener" java-key="androidx.core.view.ViewPropertyAnimatorListener" managed-key="AndroidX.Core.View.IViewPropertyAnimatorListener" partial-assembly-qualified-name="AndroidX.Core.View.IViewPropertyAnimatorListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IViewPropertyAnimatorUpdateListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ViewPropertyAnimatorUpdateListener" java-key="androidx.core.view.ViewPropertyAnimatorUpdateListener" managed-key="AndroidX.Core.View.IViewPropertyAnimatorUpdateListener" partial-assembly-qualified-name="AndroidX.Core.View.IViewPropertyAnimatorUpdateListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IWindowInsetsAnimationControlListenerCompat, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.WindowInsetsAnimationControlListenerCompat" java-key="androidx.core.view.WindowInsetsAnimationControlListenerCompat" managed-key="AndroidX.Core.View.IWindowInsetsAnimationControlListenerCompat" partial-assembly-qualified-name="AndroidX.Core.View.IWindowInsetsAnimationControlListenerCompat, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.MenuItemCompat+IOnActionExpandListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.MenuItemCompat$OnActionExpandListener" java-key="androidx.core.view.MenuItemCompat$OnActionExpandListener" managed-key="AndroidX.Core.View.MenuItemCompat.IOnActionExpandListener" partial-assembly-qualified-name="AndroidX.Core.View.MenuItemCompat+IOnActionExpandListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ViewCompat+IOnUnhandledKeyEventListenerCompat, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat" java-key="androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat" managed-key="AndroidX.Core.View.ViewCompat.IOnUnhandledKeyEventListenerCompat" partial-assembly-qualified-name="AndroidX.Core.View.ViewCompat+IOnUnhandledKeyEventListenerCompat, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.WindowInsetsControllerCompat+IOnControllableInsetsChangedListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener" java-key="androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener" managed-key="AndroidX.Core.View.WindowInsetsControllerCompat.IOnControllableInsetsChangedListener" partial-assembly-qualified-name="AndroidX.Core.View.WindowInsetsControllerCompat+IOnControllableInsetsChangedListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.WindowInsetsControllerCompat+IOnControllableInsetsChangedListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor" java-key="mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor" managed-key="AndroidX.Core.View.WindowInsetsControllerCompat.IOnControllableInsetsChangedListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.WindowInsetsControllerCompat+IOnControllableInsetsChangedListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.Accessibility.IAccessibilityViewCommand, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.accessibility.AccessibilityViewCommand" java-key="androidx.core.view.accessibility.AccessibilityViewCommand" managed-key="AndroidX.Core.View.Accessibility.IAccessibilityViewCommand" partial-assembly-qualified-name="AndroidX.Core.View.Accessibility.IAccessibilityViewCommand, Xamarin.AndroidX.Core" />
  </acw-types>
</api>