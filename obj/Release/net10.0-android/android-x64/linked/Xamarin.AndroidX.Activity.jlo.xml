<api>
  <jcw-types>
    <type name="OnContextAvailableListenerImplementor" package="mono.androidx.activity.contextaware" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Activity.ContextAware.IOnContextAvailableListenerImplementor, Xamarin.AndroidX.Activity">
      <implemented_interfaces>
        <interface name="androidx.activity.contextaware.OnContextAvailableListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="OnContextAvailableListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onContextAvailable" method="n_onContextAvailable:(Landroid/content/Context;)V:GetOnContextAvailable_Landroid_content_Context_Handler:AndroidX.Activity.ContextAware.IOnContextAvailableListenerInvoker, Xamarin.AndroidX.Activity" jni_signature="(Landroid/content/Context;)V" params="android.content.Context p0" retval="void" super_call="p0" activate_call="p0" />
      </methods>
    </type>
  </jcw-types>
  <acw-types partial-assembly-name="Xamarin.AndroidX.Activity" module-name="Xamarin.AndroidX.Activity.dll">
    <type assembly-qualified-name="AndroidX.Activity.Result.IActivityResultCallback, Xamarin.AndroidX.Activity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.activity.result.ActivityResultCallback" java-key="androidx.activity.result.ActivityResultCallback" managed-key="AndroidX.Activity.Result.IActivityResultCallback" partial-assembly-qualified-name="AndroidX.Activity.Result.IActivityResultCallback, Xamarin.AndroidX.Activity" />
    <type assembly-qualified-name="AndroidX.Activity.Result.Contract.ActivityResultContracts+PickVisualMedia+IVisualMediaType, Xamarin.AndroidX.Activity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType" java-key="androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType" managed-key="AndroidX.Activity.Result.Contract.ActivityResultContracts.PickVisualMedia.IVisualMediaType" partial-assembly-qualified-name="AndroidX.Activity.Result.Contract.ActivityResultContracts+PickVisualMedia+IVisualMediaType, Xamarin.AndroidX.Activity" />
    <type assembly-qualified-name="AndroidX.Activity.ContextAware.IOnContextAvailableListener, Xamarin.AndroidX.Activity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.activity.contextaware.OnContextAvailableListener" java-key="androidx.activity.contextaware.OnContextAvailableListener" managed-key="AndroidX.Activity.ContextAware.IOnContextAvailableListener" partial-assembly-qualified-name="AndroidX.Activity.ContextAware.IOnContextAvailableListener, Xamarin.AndroidX.Activity" />
    <type assembly-qualified-name="AndroidX.Activity.ContextAware.IOnContextAvailableListenerImplementor, Xamarin.AndroidX.Activity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor" java-key="mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor" managed-key="AndroidX.Activity.ContextAware.IOnContextAvailableListenerImplementor" partial-assembly-qualified-name="AndroidX.Activity.ContextAware.IOnContextAvailableListenerImplementor, Xamarin.AndroidX.Activity" />
  </acw-types>
</api>